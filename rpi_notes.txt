FishyCam on the Raspberry Pi
============================

Software notes
--------------

In order to use the camera via v4l, one must first load a module:

  sudo modprobe bcm2835-v4l2

Then, OpenCV's v4l2 support works reasonably well (though see Framerate below).


Framerate
---------

The capture framerate is sensitive to many things.

First, displaying the captured frames using highgui takes a huge amount of CPU time, making it infeasible (i.e., maxing out CPU) above 10fps.  Without displaying the images, however, CPU usage doesn't hit 100% until about 50fps.

Secondly, the capture size obviously makes a difference.  However, there is currently some bug in the interaction between OpenCV and V4L that makes it impossible to change the capture size after the stream is opened in OpenCV (at its default 640x480 size).  However, a user on the rpi forums has posted a fix to OpenCV:
  http://www.raspberrypi.org/forums/viewtopic.php?f=43&t=62364&start=322

It requires modifying and recompiling OpenCV.  I have not yet attempted this (2014-06-11).

For now, I think the default capture size is fine, as the CPU overhead is minimal, and I can always scale it down after capture without *too* much overhead.

Secondly, then, it is important to note that terminal output, displayed on the rpi's X server, uses a large amount of the CPU as well.  Simply switching to a different tab while FPS output is enabled in camtest.py drops the CPU usage significantly.  Keep this in mind particularly during testing, where debugging output may significantly harm performance.

