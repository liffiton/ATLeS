Installing an Updated OpenCV on the Raspbery Pi
===============================================

The following instructions assume an updated Raspbian system.

Based on:
  http://docs.opencv.org/doc/tutorials/introduction/linux_install/linux_install.html

[To build/install on Cygwin, see here: http://hvrl.ics.keio.ac.jp/kimura/opencv/]


Build dependencies
------------------

Packages that need to be installed in addition to the defaults.  [There may be something missing here that isn't included in the default Raspbian install, but this is what I had to add to my current setup.]

  cmake
  libgtk2.0-dev
  python-dev
  libavcodec-dev
  libavformat-dev
  libswscale-dev
  libpng12-dev
  libjasper-dev
  libtiff-dev

To install these:
  $ sudo apt-get install cmake libgtk2.0-dev python-dev libavcodec-dev libavformat-dev libswscale-dev libpng12-dev libjasper-dev libtiff-dev

Download OpenCV
---------------

FishyCam currently works with the latest version of OpenCV 2.4 (2.4.12 as of
this writing).  WARNING: OpenCV will fail to compile in Raspbian Jessie with
2.4.11 or earlier.  To download the latest 2.4.x release, go to
https://github.com/Itseez/opencv/releases, download the most recent 2.4.x
archive, and extract it into its own directory.


Modifying OpenCV
----------------

OpenCV 2.4.x does not allow the capture size to be modified when capturing via V4L.  The modifications suggested here correct this:
  http://www.raspberrypi.org/forums/viewtopic.php?f=43&t=62364&start=322

To make these modifications, apply the patch (found in the same directory as these notes):
  opencv-2.4.10.v4l_capsize.patch

For example, applying this patch to OpenCV 2.4.11:
  $ unzip opencv-2.4.11.zip
  [...]
  $ cd opencv-2.4.11
  $ patch -p 1 < ~/fishycam/docs/opencv-2.4.10.v4l_capsize.patch
  patching file modules/highgui/include/opencv2/highgui/highgui.hpp
  patching file modules/highgui/src/cap.cpp
  patching file modules/highgui/src/cap_v4l.cpp
  patching file modules/highgui/src/precomp.hpp


Build instructions
------------------

In the opencv-2.x.xx directory, run:

  $ mkdir release
  $ cd release
  $ cmake -D CMAKE_BUILD_TYPE=RELEASE -D CMAKE_INSTALL_PREFIX=/usr/local -D BUILD_EXAMPLES=off -D BUILD_TESTS=off -D BUILD_PERF_TESTS=off ..

In the output of cmake, verify that "OpenCV modules">"To be built" lists python, "GUI" has "YES" for GTK+, and the "Python" section lists correct paths to binaries/libraries.
Tests, examples, and performance tests are not built to save space.  It takes far too much space with those enabled (I ran out of space with 1.1GB free to start).

  $ make

This step, building OpenCV with the above configuration, takes about 4 hours on the RPi B+.

  $ sudo make install

The easiest way to check the installation now is to launch the python interpreter and type "import cv2".  If it does not report an error when importing the module, the installation is probably complete.

